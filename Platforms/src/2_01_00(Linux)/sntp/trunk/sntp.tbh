'***********************************************************************************************************
'			SNTP LIBRARY
'			(Obtains date/time from an NTPv3 server)
'***********************************************************************************************************

#ifndef SNTP_DEBUG_PRINT
	#define SNTP_DEBUG_PRINT 0
#endif

#ifndef SNTP_REPLY_TIMEOUT
	#define SNTP_REPLY_TIMEOUT 15
#endif

#ifndef SNTP_RETRY
	#define SNTP_RETRY 3
#endif

#ifndef TIME_ZONE_OFFSET
	#define TIME_ZONE_OFFSET "+0"
#endif

'------------------------------------------------------------------------------
enum en_sntp_status_codes
	SNTP_STATUS_OK,
	SNTP_STATUS_INVALID_SOCKET,
	SNTP_STATUS_INSUFFICIENT_BUFFER_SPACE,
	SNTP_STATUS_CONNECTION_TIMEOUT,
	SNTP_STATUS_REPLY_TIMEOUT,
	SNTP_STATUS_REPLY_DATA_ERROR
end enum

'------------------------------------------------------------------------------
declare sub sntp_init()
declare function sntp_start(byref server_ip as string,server_port as word) as en_sntp_status_codes

declare sub sntp_proc_timer()
declare sub sntp_proc_data()
declare sub sntp_proc_lsock_event(state as pl_lsock_state)

declare sub callback_sntp_failure(sntp_status as en_sntp_status_codes)
declare sub callback_sntp_ok(byref w_hours as word,byref w_mins as word,byref b_seconds as word,byref w_days as word,byref w_monthes as word,byref w_years as word)
declare sub callback_sntp_pre_buffrq(required_buff_pages as byte)
